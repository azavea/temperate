@mixin button-states($background-color) {
  color: $brand-black;
  background-color: $background-color;

  &:focus, &.focus {
    @include button-focus-outline();
  }

  &:hover, &.hover {
    @include light-on-dark();
    color: $neutral-0;
    background-color: adjust-color($background-color, $lightness: lightness($background-color) * -.3);
  }

  &:active, &.active {
    @include light-on-dark();
    color: $neutral-0;
    background-color: adjust-color($background-color, $lightness: lightness($background-color) * -.5);
    box-shadow: none;
  }

  &:disabled, &.disabled {
    opacity: .5;
    cursor: not-allowed;
  }
}

@mixin button-inverse-states($color) {
  color: $color;
  background-color: transparent;
  border: 2px solid transparent;

  &:focus, &.focus {
    border: 2px solid transparent;
    outline: 0;
  }

  &:hover, &.hover {
    border: 2px solid transparent;
    background-color: rgba($color, 0.2);
    color: $color;
  }

  &:active, &.active {
    border: 2px solid rgba($color, 0.2);
    background-color: rgba($color, 0.1);
    color: $color;
  }

  &:disabled, &.disabled {
    border: 2px solid transparent;
    opacity: .5;
    cursor: not-allowed;
  }
}

.button {
  font-family: $button-font-family;
  display: inline-block;
  appearance: none;
  cursor: pointer;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  overflow: visible;
  font-size: $text-small;
  line-height: 1.5;
  padding: $button-padding-vertical $button-padding-horizontal;
  border-radius: $button-border-radius;
  box-shadow: none;
  border: 0;
  @include button-states($neutral-2);
}

.button-primary {
  @include button-states($brand-teal);
}

.button-positive {
  @include button-states($brand-positive);
}

.button-danger {
  @include button-states($brand-danger);
}

.button-warning {
  @include button-states($brand-warning);
}

.button-inverse-light {
  @include light-on-dark();
  @include button-inverse-states($neutral-0);
}

.button-inverse-dark {
  @include button-inverse-states($neutral-5);
}


.button-link {
  @extend a;
  appearance: none;
  background-color: transparent;
  font: inherit;
  line-height: inherit;
  text-align: inherit;
  overflow: visible;
  cursor: pointer;
}

.button-large {
  font-size: $text-base;
  padding: $button-padding-vertical-large $button-padding-horizontal-large;
}

.button-small {
  padding: $button-padding-vertical-small $button-padding-horizontal-small;
}

.button-group {
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;

  .button {
      border-radius: 0;
  }

  > .button:first-child,
  > *:first-child .button {
      border-top-left-radius: $button-border-radius;
      border-bottom-left-radius: $button-border-radius;
  }

  > .button:last-child,
  > *:last-child .button {
      border-top-right-radius: $button-border-radius;
      border-bottom-right-radius: $button-border-radius;
  }

  > * + * {
    margin-left: 2px;
  }
}

.button-icon-left {
  i:first-of-type, .icon:first-of-type {
    margin-right: 0.4rem;
  }
}

.button-icon-right {
  i:last-of-type, .icon:last-of-type {
    margin-left: 0.4rem;
  }
}

.button-icon {
    padding: $button-padding-vertical;
}

.button-floating {
  width: 6.7rem;
  height: 6.7rem;
  border-radius: 50%;
  color: $white;
  background-color: $brand-teal;
  padding: 0;
  font-size: 3.6rem;
  box-shadow: 0 0 14px rgba($black, .28);
  display: flex;
  justify-content: center;
  align-items: center;

  &:focus, &.focus {
    @include button-focus-outline();
  }

  &:hover, &.hover {
    color: $neutral-0;
    background-color: adjust-color($brand-teal, $lightness: lightness($brand-teal) * -.3);
  }

  &:active, &.active {
    color: $neutral-0;
    background-color: adjust-color($brand-teal, $lightness: lightness($brand-teal) * -.5);
    box-shadow: none;
  }

  &:disabled, &.disabled {
    opacity: .5;
    cursor: not-allowed;
  }
}

.button-icon-only {
  padding: 0;
  background: none;

  &:focus,
  &:hover,
  &:active {
    background: none;
  }
}
